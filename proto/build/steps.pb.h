// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steps.proto

#ifndef PROTOBUF_INCLUDED_steps_2eproto
#define PROTOBUF_INCLUDED_steps_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_steps_2eproto

namespace protobuf_steps_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_steps_2eproto
namespace data {
class Step;
class StepDefaultTypeInternal;
extern StepDefaultTypeInternal _Step_default_instance_;
class Step_Particle;
class Step_ParticleDefaultTypeInternal;
extern Step_ParticleDefaultTypeInternal _Step_Particle_default_instance_;
class Step_Particle_Kparam;
class Step_Particle_KparamDefaultTypeInternal;
extern Step_Particle_KparamDefaultTypeInternal _Step_Particle_Kparam_default_instance_;
class Steps;
class StepsDefaultTypeInternal;
extern StepsDefaultTypeInternal _Steps_default_instance_;
}  // namespace data
namespace google {
namespace protobuf {
template<> ::data::Step* Arena::CreateMaybeMessage<::data::Step>(Arena*);
template<> ::data::Step_Particle* Arena::CreateMaybeMessage<::data::Step_Particle>(Arena*);
template<> ::data::Step_Particle_Kparam* Arena::CreateMaybeMessage<::data::Step_Particle_Kparam>(Arena*);
template<> ::data::Steps* Arena::CreateMaybeMessage<::data::Steps>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace data {

// ===================================================================

class Step_Particle_Kparam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:data.Step.Particle.Kparam) */ {
 public:
  Step_Particle_Kparam();
  virtual ~Step_Particle_Kparam();

  Step_Particle_Kparam(const Step_Particle_Kparam& from);

  inline Step_Particle_Kparam& operator=(const Step_Particle_Kparam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Step_Particle_Kparam(Step_Particle_Kparam&& from) noexcept
    : Step_Particle_Kparam() {
    *this = ::std::move(from);
  }

  inline Step_Particle_Kparam& operator=(Step_Particle_Kparam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Step_Particle_Kparam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Step_Particle_Kparam* internal_default_instance() {
    return reinterpret_cast<const Step_Particle_Kparam*>(
               &_Step_Particle_Kparam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Step_Particle_Kparam* other);
  friend void swap(Step_Particle_Kparam& a, Step_Particle_Kparam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Step_Particle_Kparam* New() const final {
    return CreateMaybeMessage<Step_Particle_Kparam>(NULL);
  }

  Step_Particle_Kparam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Step_Particle_Kparam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Step_Particle_Kparam& from);
  void MergeFrom(const Step_Particle_Kparam& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Step_Particle_Kparam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // float val = 2;
  void clear_val();
  static const int kValFieldNumber = 2;
  float val() const;
  void set_val(float value);

  // @@protoc_insertion_point(class_scope:data.Step.Particle.Kparam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  float val_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steps_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Step_Particle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:data.Step.Particle) */ {
 public:
  Step_Particle();
  virtual ~Step_Particle();

  Step_Particle(const Step_Particle& from);

  inline Step_Particle& operator=(const Step_Particle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Step_Particle(Step_Particle&& from) noexcept
    : Step_Particle() {
    *this = ::std::move(from);
  }

  inline Step_Particle& operator=(Step_Particle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Step_Particle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Step_Particle* internal_default_instance() {
    return reinterpret_cast<const Step_Particle*>(
               &_Step_Particle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Step_Particle* other);
  friend void swap(Step_Particle& a, Step_Particle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Step_Particle* New() const final {
    return CreateMaybeMessage<Step_Particle>(NULL);
  }

  Step_Particle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Step_Particle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Step_Particle& from);
  void MergeFrom(const Step_Particle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Step_Particle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Step_Particle_Kparam Kparam;

  // accessors -------------------------------------------------------

  // repeated .data.Step.Particle.Kparam kparams = 4;
  int kparams_size() const;
  void clear_kparams();
  static const int kKparamsFieldNumber = 4;
  ::data::Step_Particle_Kparam* mutable_kparams(int index);
  ::google::protobuf::RepeatedPtrField< ::data::Step_Particle_Kparam >*
      mutable_kparams();
  const ::data::Step_Particle_Kparam& kparams(int index) const;
  ::data::Step_Particle_Kparam* add_kparams();
  const ::google::protobuf::RepeatedPtrField< ::data::Step_Particle_Kparam >&
      kparams() const;

  // double x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  double x() const;
  void set_x(double value);

  // double y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  double y() const;
  void set_y(double value);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:data.Step.Particle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::data::Step_Particle_Kparam > kparams_;
  double x_;
  double y_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steps_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Step : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:data.Step) */ {
 public:
  Step();
  virtual ~Step();

  Step(const Step& from);

  inline Step& operator=(const Step& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Step(Step&& from) noexcept
    : Step() {
    *this = ::std::move(from);
  }

  inline Step& operator=(Step&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Step& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Step* internal_default_instance() {
    return reinterpret_cast<const Step*>(
               &_Step_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Step* other);
  friend void swap(Step& a, Step& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Step* New() const final {
    return CreateMaybeMessage<Step>(NULL);
  }

  Step* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Step>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Step& from);
  void MergeFrom(const Step& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Step* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Step_Particle Particle;

  // accessors -------------------------------------------------------

  // repeated .data.Step.Particle particles = 2;
  int particles_size() const;
  void clear_particles();
  static const int kParticlesFieldNumber = 2;
  ::data::Step_Particle* mutable_particles(int index);
  ::google::protobuf::RepeatedPtrField< ::data::Step_Particle >*
      mutable_particles();
  const ::data::Step_Particle& particles(int index) const;
  ::data::Step_Particle* add_particles();
  const ::google::protobuf::RepeatedPtrField< ::data::Step_Particle >&
      particles() const;

  // double static_energy = 3;
  void clear_static_energy();
  static const int kStaticEnergyFieldNumber = 3;
  double static_energy() const;
  void set_static_energy(double value);

  // double dynamic_energy = 4;
  void clear_dynamic_energy();
  static const int kDynamicEnergyFieldNumber = 4;
  double dynamic_energy() const;
  void set_dynamic_energy(double value);

  // double x_value = 5;
  void clear_x_value();
  static const int kXValueFieldNumber = 5;
  double x_value() const;
  void set_x_value(double value);

  // double v_value = 6;
  void clear_v_value();
  static const int kVValueFieldNumber = 6;
  double v_value() const;
  void set_v_value(double value);

  // int32 step = 1;
  void clear_step();
  static const int kStepFieldNumber = 1;
  ::google::protobuf::int32 step() const;
  void set_step(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:data.Step)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::data::Step_Particle > particles_;
  double static_energy_;
  double dynamic_energy_;
  double x_value_;
  double v_value_;
  ::google::protobuf::int32 step_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steps_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Steps : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:data.Steps) */ {
 public:
  Steps();
  virtual ~Steps();

  Steps(const Steps& from);

  inline Steps& operator=(const Steps& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Steps(Steps&& from) noexcept
    : Steps() {
    *this = ::std::move(from);
  }

  inline Steps& operator=(Steps&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Steps& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Steps* internal_default_instance() {
    return reinterpret_cast<const Steps*>(
               &_Steps_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Steps* other);
  friend void swap(Steps& a, Steps& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Steps* New() const final {
    return CreateMaybeMessage<Steps>(NULL);
  }

  Steps* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Steps>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Steps& from);
  void MergeFrom(const Steps& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Steps* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .data.Step steps = 1;
  int steps_size() const;
  void clear_steps();
  static const int kStepsFieldNumber = 1;
  ::data::Step* mutable_steps(int index);
  ::google::protobuf::RepeatedPtrField< ::data::Step >*
      mutable_steps();
  const ::data::Step& steps(int index) const;
  ::data::Step* add_steps();
  const ::google::protobuf::RepeatedPtrField< ::data::Step >&
      steps() const;

  // @@protoc_insertion_point(class_scope:data.Steps)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::data::Step > steps_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_steps_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Step_Particle_Kparam

// int32 id = 1;
inline void Step_Particle_Kparam::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Step_Particle_Kparam::id() const {
  // @@protoc_insertion_point(field_get:data.Step.Particle.Kparam.id)
  return id_;
}
inline void Step_Particle_Kparam::set_id(::google::protobuf::int32 value) {

  id_ = value;
  // @@protoc_insertion_point(field_set:data.Step.Particle.Kparam.id)
}

// float val = 2;
inline void Step_Particle_Kparam::clear_val() {
  val_ = 0;
}
inline float Step_Particle_Kparam::val() const {
  // @@protoc_insertion_point(field_get:data.Step.Particle.Kparam.val)
  return val_;
}
inline void Step_Particle_Kparam::set_val(float value) {

  val_ = value;
  // @@protoc_insertion_point(field_set:data.Step.Particle.Kparam.val)
}

// -------------------------------------------------------------------

// Step_Particle

// int32 id = 1;
inline void Step_Particle::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Step_Particle::id() const {
  // @@protoc_insertion_point(field_get:data.Step.Particle.id)
  return id_;
}
inline void Step_Particle::set_id(::google::protobuf::int32 value) {

  id_ = value;
  // @@protoc_insertion_point(field_set:data.Step.Particle.id)
}

// double x = 2;
inline void Step_Particle::clear_x() {
  x_ = 0;
}
inline double Step_Particle::x() const {
  // @@protoc_insertion_point(field_get:data.Step.Particle.x)
  return x_;
}
inline void Step_Particle::set_x(double value) {

  x_ = value;
  // @@protoc_insertion_point(field_set:data.Step.Particle.x)
}

// double y = 3;
inline void Step_Particle::clear_y() {
  y_ = 0;
}
inline double Step_Particle::y() const {
  // @@protoc_insertion_point(field_get:data.Step.Particle.y)
  return y_;
}
inline void Step_Particle::set_y(double value) {

  y_ = value;
  // @@protoc_insertion_point(field_set:data.Step.Particle.y)
}

// repeated .data.Step.Particle.Kparam kparams = 4;
inline int Step_Particle::kparams_size() const {
  return kparams_.size();
}
inline void Step_Particle::clear_kparams() {
  kparams_.Clear();
}
inline ::data::Step_Particle_Kparam* Step_Particle::mutable_kparams(int index) {
  // @@protoc_insertion_point(field_mutable:data.Step.Particle.kparams)
  return kparams_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::data::Step_Particle_Kparam >*
Step_Particle::mutable_kparams() {
  // @@protoc_insertion_point(field_mutable_list:data.Step.Particle.kparams)
  return &kparams_;
}
inline const ::data::Step_Particle_Kparam& Step_Particle::kparams(int index) const {
  // @@protoc_insertion_point(field_get:data.Step.Particle.kparams)
  return kparams_.Get(index);
}
inline ::data::Step_Particle_Kparam* Step_Particle::add_kparams() {
  // @@protoc_insertion_point(field_add:data.Step.Particle.kparams)
  return kparams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::data::Step_Particle_Kparam >&
Step_Particle::kparams() const {
  // @@protoc_insertion_point(field_list:data.Step.Particle.kparams)
  return kparams_;
}

// -------------------------------------------------------------------

// Step

// int32 step = 1;
inline void Step::clear_step() {
  step_ = 0;
}
inline ::google::protobuf::int32 Step::step() const {
  // @@protoc_insertion_point(field_get:data.Step.step)
  return step_;
}
inline void Step::set_step(::google::protobuf::int32 value) {

  step_ = value;
  // @@protoc_insertion_point(field_set:data.Step.step)
}

// repeated .data.Step.Particle particles = 2;
inline int Step::particles_size() const {
  return particles_.size();
}
inline void Step::clear_particles() {
  particles_.Clear();
}
inline ::data::Step_Particle* Step::mutable_particles(int index) {
  // @@protoc_insertion_point(field_mutable:data.Step.particles)
  return particles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::data::Step_Particle >*
Step::mutable_particles() {
  // @@protoc_insertion_point(field_mutable_list:data.Step.particles)
  return &particles_;
}
inline const ::data::Step_Particle& Step::particles(int index) const {
  // @@protoc_insertion_point(field_get:data.Step.particles)
  return particles_.Get(index);
}
inline ::data::Step_Particle* Step::add_particles() {
  // @@protoc_insertion_point(field_add:data.Step.particles)
  return particles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::data::Step_Particle >&
Step::particles() const {
  // @@protoc_insertion_point(field_list:data.Step.particles)
  return particles_;
}

// double static_energy = 3;
inline void Step::clear_static_energy() {
  static_energy_ = 0;
}
inline double Step::static_energy() const {
  // @@protoc_insertion_point(field_get:data.Step.static_energy)
  return static_energy_;
}
inline void Step::set_static_energy(double value) {

  static_energy_ = value;
  // @@protoc_insertion_point(field_set:data.Step.static_energy)
}

// double dynamic_energy = 4;
inline void Step::clear_dynamic_energy() {
  dynamic_energy_ = 0;
}
inline double Step::dynamic_energy() const {
  // @@protoc_insertion_point(field_get:data.Step.dynamic_energy)
  return dynamic_energy_;
}
inline void Step::set_dynamic_energy(double value) {

  dynamic_energy_ = value;
  // @@protoc_insertion_point(field_set:data.Step.dynamic_energy)
}

// double x_value = 5;
inline void Step::clear_x_value() {
  x_value_ = 0;
}
inline double Step::x_value() const {
  // @@protoc_insertion_point(field_get:data.Step.x_value)
  return x_value_;
}
inline void Step::set_x_value(double value) {

  x_value_ = value;
  // @@protoc_insertion_point(field_set:data.Step.x_value)
}

// double v_value = 6;
inline void Step::clear_v_value() {
  v_value_ = 0;
}
inline double Step::v_value() const {
  // @@protoc_insertion_point(field_get:data.Step.v_value)
  return v_value_;
}
inline void Step::set_v_value(double value) {

  v_value_ = value;
  // @@protoc_insertion_point(field_set:data.Step.v_value)
}

// -------------------------------------------------------------------

// Steps

// repeated .data.Step steps = 1;
inline int Steps::steps_size() const {
  return steps_.size();
}
inline void Steps::clear_steps() {
  steps_.Clear();
}
inline ::data::Step* Steps::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:data.Steps.steps)
  return steps_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::data::Step >*
Steps::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:data.Steps.steps)
  return &steps_;
}
inline const ::data::Step& Steps::steps(int index) const {
  // @@protoc_insertion_point(field_get:data.Steps.steps)
  return steps_.Get(index);
}
inline ::data::Step* Steps::add_steps() {
  // @@protoc_insertion_point(field_add:data.Steps.steps)
  return steps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::data::Step >&
Steps::steps() const {
  // @@protoc_insertion_point(field_list:data.Steps.steps)
  return steps_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace data

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_steps_2eproto
